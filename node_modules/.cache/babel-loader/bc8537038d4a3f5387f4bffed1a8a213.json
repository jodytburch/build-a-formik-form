{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jodyt\\\\mit-coding-course\\\\mod13\\\\build-a-formik-form\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values => {\n      console.log('form values: ', values);\n      alert(\"Login Successful\");\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) errors.emailError = 'Field required';else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) errors.emailError = 'Username should be an email';\n      if (!values.pswField) errors.pswError = 'Field required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), formik.errors.emailError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: [\" \", formik.errors.emailError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 39\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), formik.errors.pswError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.pswError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          name: \"submitBtn\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","emailField","pswField","onSubmit","values","console","log","alert","validate","errors","emailError","test","pswError","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","name","type","onChange","handleChange","value","style","color","_c","$RefreshReg$"],"sources":["C:/Users/jodyt/mit-coding-course/mod13/build-a-formik-form/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport {useFormik} from 'formik';\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values => {\n      console.log('form values: ', values);\n      alert(\"Login Successful\");\n    },\n    validate: values =>{\n      let errors = {};\n      if(!values.emailField) \n        errors.emailError = 'Field required';\n      else if ((!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)))\n        errors.emailError = 'Username should be an email';\n      if(!values.pswField) errors.pswError = 'Field required';\n      return errors;\n    }\n  });\n\n  return (\n    <div>\n        <form onSubmit={formik.handleSubmit}>\n          <div>Username:</div>\n          <input name=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.emailField}/>\n          {formik.errors.emailError ? <div style={{color:'red'}}> {formik.errors.emailError}</div>: null}\n\n          <div>Password:</div>\n          <input name=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.pswField}/>\n          {formik.errors.pswError ? <div style={{color:'red'}}>{formik.errors.pswError}</div>: null}\n\n          <div><button name=\"submitBtn\" type=\"submit\">Submit</button></div>\n\n        </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}